@page "/login"
@using DriverTask.Models
@layout AuthLayout
@inject NavigationManager navigationManager
@inject DriverAuthStateProvider authStateProvider
<h1 class="h2 font-weight-normal login-title">
    Login
</h1>
<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
    <DataAnnotationsValidator />
    <label for="inputUsername" class="sr-only">User Name</label>
    <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.UserName" autofocus placeholder="Username" />
    <ValidationMessage For="@(() => loginRequest.UserName)" />
    <label for="inputPassword" class="sr-only">Password</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginRequest.Password" />
    <ValidationMessage For="@(() => loginRequest.Password)" />
    <div class="form-check m-3 col text-center">
        <button class="center-block btn btn-lg btn-primary btn-block">Scan</button>
        <button class="center-block btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
    </div>
    
    <label class="text-danger">@error</label>
</EditForm>
@code{
    LoginRequest loginRequest { get; set; } = new LoginRequest();
    string error { get; set; }
    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}
